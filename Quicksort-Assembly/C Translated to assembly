	.file	1 "labb2.c"

 # -G value = 8, Cpu = 3000, ISA = 1
 # GNU C version cygnus-2.7.2-970404 (mips-mips-ecoff) compiled by GNU C version cygnus-2.7.2-970404.
 # options passed: 
 # options enabled:  -fpeephole -ffunction-cse -fkeep-static-consts
 # -fpcc-struct-return -fcommon -fverbose-asm -fgnu-linker -meb -mcpu=3000

gcc2_compiled.:
__gnu_compiled_c:
	.globl	antal
	.sdata
	.align	2
antal:
	.word	10
	.text
	.align	2
	.globl	Partition
	.ent	Partition
Partition:
	.frame	$fp,24,$31		# vars= 16, regs= 1/0, args= 0, extra= 0
	.mask	0x40000000,-8
	.fmask	0x00000000,0
	subu	$sp,$sp,24
	sw	$fp,16($sp)
	move	$fp,$sp
	sw	$4,24($fp)
	sw	$5,28($fp)
	sw	$6,32($fp)
	lw	$2,28($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,0($2)
	sw	$3,0($fp)
	lw	$2,28($fp)
	addu	$3,$2,1
	sw	$3,4($fp)
	lw	$2,32($fp)
	sw	$2,8($fp)
$L2:
$L5:
	lw	$2,4($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,0($2)
	lw	$2,0($fp)
	slt	$3,$2,$3
	bne	$3,$0,$L8
	lw	$2,4($fp)
	lw	$3,8($fp)
	slt	$2,$3,$2
	beq	$2,$0,$L7
	j	$L8
$L8:
	j	$L6
$L7:
	lw	$2,4($fp)
	addu	$3,$2,1
	sw	$3,4($fp)
	j	$L5
$L6:
	.set	noreorder
	nop
	.set	reorder
$L9:
	lw	$2,8($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,0($2)
	lw	$2,0($fp)
	slt	$3,$2,$3
	beq	$3,$0,$L12
	lw	$2,4($fp)
	lw	$3,8($fp)
	slt	$2,$3,$2
	beq	$2,$0,$L11
	j	$L12
$L12:
	j	$L10
$L11:
	lw	$2,8($fp)
	addu	$3,$2,-1
	sw	$3,8($fp)
	j	$L9
$L10:
	lw	$2,4($fp)
	lw	$3,8($fp)
	slt	$2,$3,$2
	bne	$2,$0,$L4
	lw	$2,4($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,0($2)
	sw	$3,12($fp)
	lw	$2,4($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,8($fp)
	move	$4,$3
	sll	$3,$4,2
	lw	$4,24($fp)
	addu	$3,$3,$4
	lw	$4,0($3)
	sw	$4,0($2)
	lw	$2,8($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,12($fp)
	sw	$3,0($2)
	lw	$2,4($fp)
	addu	$3,$2,1
	sw	$3,4($fp)
	lw	$2,8($fp)
	addu	$3,$2,-1
	sw	$3,8($fp)
$L13:
$L4:
	lw	$2,4($fp)
	lw	$3,8($fp)
	slt	$2,$3,$2
	beq	$2,$0,$L14
	j	$L3
$L14:
	j	$L2
$L3:
	lw	$2,8($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,0($2)
	sw	$3,12($fp)
	lw	$2,8($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,28($fp)
	move	$4,$3
	sll	$3,$4,2
	lw	$4,24($fp)
	addu	$3,$3,$4
	lw	$4,0($3)
	sw	$4,0($2)
	lw	$2,28($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,24($fp)
	addu	$2,$2,$3
	lw	$3,12($fp)
	sw	$3,0($2)
	lw	$3,8($fp)
	move	$2,$3
	j	$L1
$L1:
	move	$sp,$fp			# sp not trusted here
	lw	$fp,16($sp)
	addu	$sp,$sp,24
	j	$31
	.end	Partition
	.align	2
	.globl	QuickSort
	.ent	QuickSort
QuickSort:
	.frame	$fp,32,$31		# vars= 8, regs= 2/0, args= 16, extra= 0
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	subu	$sp,$sp,32
	sw	$31,28($sp)
	sw	$fp,24($sp)
	move	$fp,$sp
	sw	$4,32($fp)
	sw	$5,36($fp)
	sw	$6,40($fp)
	lw	$2,36($fp)
	lw	$3,40($fp)
	slt	$2,$2,$3
	beq	$2,$0,$L16
	lw	$4,32($fp)
	lw	$5,36($fp)
	lw	$6,40($fp)
	jal	Partition
	sw	$2,16($fp)
	lw	$3,16($fp)
	addu	$2,$3,-1
	lw	$4,32($fp)
	lw	$5,36($fp)
	move	$6,$2
	jal	QuickSort
	lw	$3,16($fp)
	addu	$2,$3,1
	lw	$4,32($fp)
	move	$5,$2
	lw	$6,40($fp)
	jal	QuickSort
$L16:
$L15:
	move	$sp,$fp			# sp not trusted here
	lw	$31,28($sp)
	lw	$fp,24($sp)
	addu	$sp,$sp,32
	j	$31
	.end	QuickSort
	.sdata
	.align	2
$LC0:
	.ascii	"\n\000"
	.align	2
$LC1:
	.ascii	"%l \n\000"
	.text
	.align	2
	.globl	skriv
	.ent	skriv
skriv:
	.frame	$fp,32,$31		# vars= 8, regs= 2/0, args= 16, extra= 0
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	subu	$sp,$sp,32
	sw	$31,28($sp)
	sw	$fp,24($sp)
	move	$fp,$sp
	sw	$4,32($fp)
	la	$4,$LC0
	jal	printf
	sw	$0,16($fp)
$L18:
	lw	$2,16($fp)
	lw	$3,antal
	slt	$2,$2,$3
	bne	$2,$0,$L21
	j	$L19
$L21:
	lw	$2,16($fp)
	move	$3,$2
	sll	$2,$3,2
	lw	$3,32($fp)
	addu	$2,$2,$3
	la	$4,$LC1
	lw	$5,0($2)
	jal	printf
$L20:
	lw	$2,16($fp)
	addu	$3,$2,1
	sw	$3,16($fp)
	j	$L18
$L19:
$L17:
	move	$sp,$fp			# sp not trusted here
	lw	$31,28($sp)
	lw	$fp,24($sp)
	addu	$sp,$sp,32
	j	$31
	.end	skriv
	.rdata
	.align	2
$LC2:
	.word	4
	.word	5
	.word	2
	.word	2
	.word	1
	.word	6
	.word	7
	.word	9
	.word	5
	.word	10
	.text
	.align	2
	.globl	main
	.ent	main
main:
	.frame	$fp,64,$31		# vars= 40, regs= 2/0, args= 16, extra= 0
	.mask	0xc0000000,-4
	.fmask	0x00000000,0
	subu	$sp,$sp,64
	sw	$31,60($sp)
	sw	$fp,56($sp)
	move	$fp,$sp
	jal	__main
	addu	$2,$fp,16
	la	$3,$LC2
	move	$4,$2
	move	$5,$3
	li	$6,40			# 0x00000028
	jal	memcpy
	addu	$4,$fp,16
	jal	skriv
	lw	$3,antal
	addu	$2,$3,-1
	addu	$4,$fp,16
	move	$5,$0
	move	$6,$2
	jal	QuickSort
	addu	$4,$fp,16
	jal	skriv
$L22:
	move	$sp,$fp			# sp not trusted here
	lw	$31,60($sp)
	lw	$fp,56($sp)
	addu	$sp,$sp,64
	j	$31
	.end	main
